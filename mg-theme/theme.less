/* Define some variables used in multiple places */
*{
  line-height: 1.7rem;  
    letter-spacing:1.25px;
}
@background: rgba(20,20,20,1);
@foreground: rgba(205,205,205,1);
@var: #DF5608;
@prop: #883506;
@attr: #08DF56;
@num: #08DFC2;
@string: #25DF08;
@head: #91DF08;
@link: #DFC208;
@key: #EE0DE4;
@range: #068876;
@error: #EE0D0D;
@comment: #0DEE7E;
/* Code Styling */

.CodeMirror, .CodeMirror-scroll {
    background-color: @background; 
    color: @foreground;
//    text-shadow: .25px .25px .55px rgba(250,250,250,.75), -.25px -.25px .185px rgba(250,250,250,.75);
  
}

.CodeMirror-focused .CodeMirror-activeline-background {
    background: rgba(15,35,25,1);
    transform:scale(1.2);
    box-shadow: 1px 1px 2px rgba(185,185,255,1), -1px -1px 2px rgba(105,105,255,1);
    padding:2px;
     
}

.show-line-padding .CodeMirror-focused .CodeMirror-activeline-background {
    box-shadow: 15px 25px 0 25px #000;
}

.CodeMirror-focused .CodeMirror-activeline {
    .CodeMirror-gutter-elt {
        background: rgba(255, 0, 0, 0.25);
        color: #fff;
    }
    .inline-widget .CodeMirror-gutter-elt {
        color: tan;
    }
}

.cm-atom, .cm-string, .cm-string-2, .cm-hr {
    color: @string;
}
.cm-number, .cm-attribute, .cm-plus {
    color: @num;
}
.cm-def, .cm-property {
    color: @prop;
      text-shadow: .125px .125px .25px rgba(250,2,2,.75), -.125px -.125px .185px rgba(250,250,250,.75);
}
.cm-variable, .cm-variable-2, .cm-variable-3, .cm-operator, .cm-meta, .cm-bracket {
    color: @foreground;
    background:rgba(125,25,25,.25);
      text-shadow: .125px .125px .155px rgba(250,250,250,.75), -.125px -.125px .185px rgba(250,250,250,.75);
}
.cm-comment {
    color: @comment;
}
.cm-minus {
    color: #dc322f;
}
.cm-header {
    color: @head;
}
.cm-link {
    color: @link; text-decoration: none;
}
.cm-rangeinfo {
    color: @range;
}
.cm-keyword, .cm-qualifier, .cm-builtin, .cm-tag, .cm-quote {
    color: @key;
}
.cm-error {
    color: @error;
}

/* Extra CSS */

.CodeMirror-searching {
    background-color: #d3cd69;
    &.searching-current-match {
        background-color: @attr;
    }
}


.CodeMirror-cursor {
    border-left: 2.5px solid rgba(185,185,250,1) !important;
}

.CodeMirror-gutters {
    background-color: @background;
    border-right: none;
}

.CodeMirror-linenumber {
    color: #767676;
}

.CodeMirror .CodeMirror-selected {
    background:  rgba(125,125,185,.45);
}
.CodeMirror-focused .CodeMirror-selected {
    background: rgba(125,125,185,.415);
}

.CodeMirror-matchingbracket, .CodeMirror-matchingtag {
    /* Ensure visibility against gray inline editor background */
    background-color: rgba(255,255,0,.25);
    width:5px;
    color: @foreground !important;
}

.CodeMirror-overwrite .CodeMirror-cursor {
    border-left: none !important;
    border-bottom: 1px solid #fff;
}

/*
    CodeMirror's use of descendant selectors for certain styling causes problems when editors are
    nested because, for items in the inner editor, the left-hand clause in the selector will now
    match either the actual containing CodeMirror instance *OR* the outer "host" CodeMirror instance.
    TODO (issue #324): We'll still have problems if editors can be nested more than one level deep,
    or if any other descendant-selector-driven CM styles can differ between inner & outer editors
    (potential problem areas include line wrap and coloring theme: basically, anything in codemirror.css
    that uses a descandant selector where the CSS class name to the left of the space is something
    other than a vanilla .CodeMirror)
 */
.CodeMirror {
    .CodeMirror {
        background: transparent;
    }

    .CodeMirror .CodeMirror-gutters {
        background: transparent;
        border-right: none;
    }

    .CodeMirror .CodeMirror-activeline-background {
        background: transparent;
    }

    .CodeMirror .CodeMirror-activeline .CodeMirror-gutter-elt {
        background: transparent;
        color: #767676;
    }

    .CodeMirror-focused .CodeMirror-activeline-background {
        background: #2f2f2f;
    }

    .CodeMirror-focused .CodeMirror-activeline {
        .CodeMirror-gutter-elt {
            background: rgba(0, 0, 0, 0.2);
            color: #fff;
        }
    }
}

.CodeMirror-foldgutter-open:after {
    color: #666;
}
.CodeMirror-foldgutter-folded:after {
    color: #aaa;
}

.CodeMirror.over-gutter, .CodeMirror-activeline {
    .CodeMirror-foldgutter-open:after {
        color: #888;
    }
}

.CodeMirror-foldmarker {
    border-color: #000;
    color: #ccc;
    background-color: #444;
}

/* Non-editor styling */

.image-view,
.not-editor {
    background-color: @background;
}

.view-pane .image-view {
    color: @foreground;
}